// Generated by CoffeeScript 1.3.3
(function() {
  var factory;

  factory = function(sqlite3) {
    var sqli;
    sqli = require('./sqli');
    return sqli.register('sqlite', {
      connect: function(filename, cb) {
        var db;
        return db = new sqlite3.Database(filename, function(err) {
          if (err) {
            return cb(err, null);
          }
          return cb(null, db);
        });
      },
      close: function(db) {
        return db.close();
      },
      execute: function(db, sql, params, rowCb, endCb, errCb) {
        return db.each(sql, params, function(err, row) {
          if (err) {
            return errCb(err);
          } else {
            return rowCb(row);
          }
        }, function(err, count) {
          if (err) {
            return errCb(err);
          } else {
            return endCb();
          }
        });
      },
      begin: function(isolation) {
        switch (isolation) {
          case sqli.REPEATABLE_READ:
            return 'BEGIN IMMEDIATE TRANSACTION';
          case sqli.SERIALIZABLE:
            return 'BEGIN EXCLUSIVE TRANSACTION';
          default:
            return 'BEGIN TRANSACTION';
        }
      },
      save: function(savepoint) {
        return 'SAVEPOINT ' + savepoint;
      },
      commit: function() {
        return 'COMMIT';
      },
      rollback: function(savepoint) {
        if (!savepoint) {
          return 'ROLLBACK';
        }
        return 'ROLLBACK TO ' + savepoint;
      }
    });
  };

  try {
    factory(require('sqlite3'));
  } catch (error) {
    console.log("Could not load sqlite3 wrapper:\n" + error.message);
  }

}).call(this);
